# Parameterized geometry for MiniWings Research project.
# Research performed by Micheal Mongin, Josh Deslich, and Aaron Altman.
# Contact Micheal Monign: monginm1@udayton.edu for any questions.

# Geometry code developed by: Josh Deslich
# Contact Josh Deslich: jpdeslich@gmail.com for code/analysis related questions.

# --------------------- MiniWing Config Parameters -------------
CFGPMTR   span    0.383     # span of each individual wing (meters)
CFGPMTR   aspect  8.0     # aspect ratio of each individual wing (dimless)
CFGPMTR   af_row  2.0     # number of rows of wings (dimless)
CFGPMTR   af_col  6.0     # number of columns of wings (dimless)
CFGPMTR   alpha_i 0.0     # global airfoil incidence angle

CFGPMTR   visual  0.0     # Determines if af sections are ruled for visualization

SET       chord     span/aspect                   # calculate chord of each individual wing (meters)
SET       wingArea  chord*span*af_row*af_col      # Wing area
SET       nSeries   0012                          # NACA 0012 airfoil series

DESPMTR   stagger   1.0     # horizontal direction spacing in chord lengths within a row, x (meters)

# --------------------- MiniWing Design Parameters -------------
DESPMTR  gap          1.0           # vertical direction spacing, y (meters)
DESPMTR  stagger_row  0.0           # horizontal direction stagger between rows

# --------------------- Wing Placement -------------------------
# Determine x and y location of leading edge for each wing.
# Dynamically size the arrays with af_row and af_col.

DIMENSION x_LE   af_row   af_col   # allocate array
DIMENSION z_LE   af_row   af_col   # allocate array

PATBEG  i  af_row
    PATBEG  j  af_col

        SET   x_LE[i,j]  chord*(j-1)+((j-1)*stagger*chord)+((i-1)*(stagger_row*chord))      # set x LE position
        SET   z_LE[i,j]  (i-1)*(gap*chord)                                                  # set y LE position

        # Generate airfoils - make left af
        UDPRIM   naca     Series    nSeries
        SCALE    chord
        ROTATEX     90.00       0.00   0.00
        ROTATEY     alpha_i     0.00   0.00
        TRANSLATE   x_LE[i,j]  -span/2   z_LE[i,j]

        # Add af to individual wing capsGroup
        ATTRIBUTE   capsGroup          $wing+val2str(i,0)+val2str(j,0)
        ATTRIBUTE   capsAIM            $avlAIM;frictionAIM
        ATTRIBUTE   capsReferenceArea  wingArea
        ATTRIBUTE   capsReferenceSpan  span
        ATTRIBUTE   capsReferenceChord chord
        ATTRIBUTE   capsReferenceX     chord/4

        # Generate airfoils - make right af
        UDPRIM   naca     Series    nSeries
        SCALE    chord
        ROTATEX     90.00       0.00   0.00
        ROTATEY     alpha_i     0.00   0.00
        TRANSLATE   x_LE[i,j]   span/2   z_LE[i,j]

        # Add af wing capsGroup from above
        ATTRIBUTE   capsGroup  $wing+val2str(i,0)+val2str(j,0)
        ATTRIBUTE   capsAIM    $avlAIM;frictionAIM

        # Only for visualization
        IFTHEN  visual  eq  1.0

            RULE
            STORE  af_+val2str(i,0)+val2str(j,0)

        ENDIF
    PATEND
PATEND

# Restore ruled airfoils for visualization
IFTHEN  visual  eq  1.0
    PATBEG  i  af_row
        PATBEG  j  af_col

            RESTORE  af_+val2str(i,0)+val2str(j,0)

        PATEND
    PATEND
ENDIF
